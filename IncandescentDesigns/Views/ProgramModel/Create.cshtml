@model IncandescentDesigns.Models.ProgramModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="jumbotron">
        <p class="lead"> </p>

        <div class="container">
            <div class="form-horizontal">
                <h4>Create A Program</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-10 col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-10 col-md-10">
                        @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mood, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-10 col-md-10">
                        @Html.EditorFor(model => model.Mood, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mood, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!--<div class="form-group">
                    @Html.LabelFor(model => model.Likes, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Likes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Likes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                    </div>
                </div>-->

                <div class="form-group">
                    <div class="col-xs-offset-2 col-xs-10 col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            </div>
        </div>
            }


            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
